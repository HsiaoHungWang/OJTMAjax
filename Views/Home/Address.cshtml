
@{
    ViewData["Title"] = "Address";
}

<h1>Address</h1>
<select id="selectCity">   
</select>
<select id="selectSite">
</select>
<select id="selectRoad">
</select>
<div id="div1"></div>

@section Scripts{
    <script>
        //async => function 前 ， await Promise 前
           
        //IIFE 立即執行函式
        // (()=>{

        // })();

        const selCity = document.querySelector('#selectCity');
        const selSite = document.querySelector('#selectSite');
        const selRoad = document.querySelector('#selectRoad');
        const divAddress = document.querySelector('#div1');
       
        (async()=>{
          const url = '@Url.Content("~/api/Cities")';
          //步驟一
          const response = await fetch(url);
          if(!response.ok){
            throw new Error('api 串接失敗');
          }
          //步驟二
           const datas = await response.json();
           
           //步驟三讀取JSON資料
           // datas.map((city)=>{
           //     console.log(city);
           // })

           //步驟四顯示資料
           const opts = datas.map((city)=>{
               return `
                  <option value="${city}">${city}</option>
               `             
           })

           selCity.innerHTML = opts.join("");
            //載入鄉鎮區
           loadSite();
        })();

        //事件發生要執行函式
         selCity.addEventListener('change',()=>{
             //載入鄉鎮區
             loadSite();
            divAddress.textContent = selCity.value;
        })

        selSite.addEventListener('change',()=>{
            //載入路名
            loadRoad();
            divAddress.textContent = `${selSite.value}`;
        })

        selRoad.addEventListener('change',()=>{
            divAddress.textContent = `${selSite.value} ${selRoad.value}`;
        })

      

        //根據縣市讀取鄉鎮區的資料
        const loadSite = async()=>{
            const url = `@Url.Content("~/api/sites")?city=${selCity.value}`
            const response = await fetch(url);
            const datas = await response.json();
            const optSites = datas.map(site=>{
               return `
                  <option value="${site}">${site}</option>
               `
            })

            selSite.innerHTML = optSites.join("");

            //載入路名
            loadRoad();
        }

        //根據鄉鎮區讀取路名
        const loadRoad =async ()=>{
            const url = `@Url.Content("~/api/roads")?site=${selSite.value}`;
            const response = await fetch(url);
            const datas = await response.json();
            const optRoads = datas.map(road=>{
                return `
                    <option value="${road}">${road}</option>
                `
            })
            selRoad.innerHTML = optRoads.join("");
        }

    </script>
}

