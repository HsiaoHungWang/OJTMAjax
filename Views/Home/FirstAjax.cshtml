
@{
    ViewData["Title"] = "FirstAjax";
}

<h1>FirstAjax</h1>
<button id="button1">Click</button>
<div id="div1"></div>

@section Scripts{
    <script>
        const btn = document.querySelector('#button1');
         const myDiv = document.querySelector('#div1');
          btn.addEventListener('click',async ()=>{
               const url = '@Url.Content("~/api/index")';

               //做法二透過async await 拆解Promise
               const response = await fetch(url);
               if(!response.ok) throw new Error(response.status);
               const data = await response.text();
               myDiv.textContent = data;


               //作法一透過then拆解Promise
                // fetch(url)
                //  .then(response=>{
                //        console.log(response);
                //        讀取 Response Headers 中的資料
                //        response.headers.forEach((value, key)=>{
                //            console.log(`${key}:${value}`);
                //        })
                //        根據response.ok 為True or False 來處理錯誤
                //        !false => not false => true
                //        if(!response.ok) throw new Error(response.status);

                //        回應是文字內容透過text()讀資料又會得到Promise物件
                //        return response.text();
                //  })
                //  .then(data=>{
                //       console.log(data);
                //       myDiv.textContent = data;
                //  })
          })


         //fetch 是一個function
         //使用 fetch 也會得到 promise 物件
       // console.log(fetch('/api/index'));  promise
       //  fetch('/api/index')
       //  .then(Response=>{
       //        console.log(Response);
       //        回應是文字內容透過text()讀資料
       //        return Response.text();
       //  })
       //  .then(data=>{
       //      console.log(data);
       //  })

    </script>
}

